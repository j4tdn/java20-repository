-- Patches to creating tables
-- ITEM_GROUP, ITEM, SIZE, ITEM_DETAIL

USE java20_shopping;

-- create table ITEM_GROUP
DROP TABLE IF EXISTS ITEM_GROUP;
CREATE TABLE ITEM_GROUP
(
	ID INT,
    `NAME` VARCHAR(100) NOT NULL,
    PRIMARY KEY (ID) --  KHÔNG NÊN/cần đặt tên cho ràng buộc key
);

-- create table ITEM
DROP TABLE IF EXISTS ITEM;
CREATE TABLE ITEM
(
	ID INT,
    MATERIAL VARCHAR(100) NOT NULL,
    BUY_PRICE FLOAT NOT NULL,
    COLOR VARCHAR(50) NOT NULL,
    ITEM_GROUP_ID INT NOT NULL, -- KHOÁ NGOẠI KHÔNG BẮT BUỘC PHẢI NOT NULL
    PRIMARY KEY (ID),
    CONSTRAINT FK_ITEM_ITEM_GROUP FOREIGN KEY  (ITEM_GROUP_ID) REFERENCES ITEM_GROUP(ID)
);
-- ALTER TABLE ITEM ADD PRIMARY KEY (ID);

-- create table SZIE
DROP TABLE IF EXISTS SIZE;
CREATE TABLE SIZE
(
	ID INT,
	`KEY` VARCHAR(10) NOT NULL,
	`GENDER` BIT NOT NULL,
    `DESC` TEXT NOT NULL,
    PRIMARY KEY (ID),
    CONSTRAINT CHK_SIZE_KEY CHECK (`KEY` IN ('S', 'M', 'L', 'XL', 'XXL', 'XXXL')),
    CONSTRAINT CHK_GENDER CHECK (`GENDER` IN (0, 1))
);


-- chuwa hocj - thuwr
-- TRUNCATE SIZE;	-- tương tự DELETE FROM SIZE
-- SELECT * FROM SIZE;
-- INSERT INTO SIZE VALUES(1, 'S', 0, 'Nữ cân nặng bé hơn 40kg ');
-- INSERT INTO SIZE VALUES(2, 'SS', 0, 'Nam cân nặng bé hơn 50kg ');

-- create table ITEM_DETAIL
DROP TABLE IF EXISTS ITEM_DETAIL;
CREATE TABLE ITEM_DETAIL
(
	ID INT,
	ITEM_ID INT NOT NULL,
	SIZE_ID INT NOT NULL,
	AMOUNT INT NOT NULL,
    SALES_PRICE FLOAT NOT NULL,
    PRIMARY KEY (ID),
    CONSTRAINT UNQ_ITEM_SIZED UNIQUE (ITEM_ID, SIZE_ID)

);
ALTER TABLE ITEM_DETAIL
ADD CONSTRAINT FK_ITEM_DETAIL_ITEM FOREIGN KEY (ITEM_ID) REFERENCES ITEM(ID);

ALTER TABLE ITEM_DETAIL
ADD CONSTRAINT FK_ITEM_DETAIL_SIZE FOREIGN KEY (SIZE_ID) REFERENCES SIZE(ID);

DROP TABLE IF EXISTS CUSTOMER;
CREATE TABLE CUSTOMER
(
	ID INT,
    `NAME` VARCHAR(100) NOT NULL,
    EMAIL VARCHAR(100) NOT NULL,
    ADDRESS VARCHAR(200) NOT NULL,
    PHONE VARCHAR(20) NOT NULL,
    `PASSWORD` VARCHAR(50) NOT NULL,
    PRIMARY KEY (ID)
    
);

DROP TABLE IF EXISTS DEPARTMENT;
CREATE TABLE DEPARTMENT
(
	ID INT,
    `NAME` VARCHAR(50),
    PRIMARY KEY (ID)
);

DROP TABLE IF EXISTS EMPLOYEE;
CREATE TABLE EMPLOYEE
(
	ID INT,
    `NAME` VARCHAR(50),
	EMAIL VARCHAR(100) NOT NULL,
    ADDRESS VARCHAR(200) NOT NULL,
    PHONE VARCHAR(20) NOT NULL,
    PRIMARY KEY (ID),
    DEPARTMENT_ID INT,
    CONSTRAINT FK_EMPLOYEE_DEPARTMENT_ID FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENT(ID)
    
);

DROP TABLE IF EXISTS PAYMENT_METHOD;
CREATE TABLE PAYMENT_METHOD
(
	ID INT,
    `DESC` VARCHAR(1000),
    PRIMARY KEY (ID)
);

DROP TABLE IF EXISTS ORDER_STATUS;
CREATE TABLE ORDER_STATUS
(
	ID INT,
    `DESC` VARCHAR(1000),
    PRIMARY KEY (ID)
);

DROP TABLE IF EXISTS `ORDER`;
CREATE TABLE `ORDER`
(
	ID INT,
    DELIVERY_FEE FLOAT,
    CREATED_AT DATETIME,
    PAYMENT_METHOD_ID INT,
    EMPLOYEE_ID INT,
    CUSTOMER_ID INT,
    PRIMARY KEY (ID),
    CONSTRAINT FK_ORDER_PAYMENT_METHOD_ID FOREIGN KEY (PAYMENT_METHOD_ID) REFERENCES PAYMENT_METHOD(ID),
	CONSTRAINT FK_ORDER_EMPLOYEE_ID FOREIGN KEY (EMPLOYEE_ID) REFERENCES EMPLOYEE(ID),
	CONSTRAINT FK_ORDER_CUSTOMER_ID FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(ID)
);

DROP TABLE IF EXISTS ORDER_DETAIL;
CREATE TABLE ORDER_DETAIL
(
	ID INT,
    ORDER_ID INT,
    ITEM_DETAIL_ID INT,
    AMOUNT INT,
    PRIMARY KEY (ID),
    CONSTRAINT FK_ORDER_DETAIL_ORDER FOREIGN KEY (ORDER_ID) REFERENCES `ORDER`(ID),
    CONSTRAINT FK_ORDER_DETAIL_ITEM_DETAIL FOREIGN KEY (ITEM_DETAIL_ID) REFERENCES ITEM_DETAIL(ID),
	CONSTRAINT UNQ_ORDER_ITEM_DETAIL UNIQUE (ORDER_ID, ITEM_DETAIL_ID)

);

DROP TABLE IF EXISTS ORDER_STATUS_DETAIL;
CREATE TABLE ORDER_STATUS_DETAIL
(
	ID INT,
    ORDER_ID INT,
    ORDER_STATUS_ID INT,
    EMPLOYEE_ID INT,
    UPDATED_AT DATETIME,
    PRIMARY KEY (ID),
    CONSTRAINT FK_ORDER_STATUS_DETAIL_ORDER FOREIGN KEY (ORDER_ID) REFERENCES `ORDER`(ID),
	CONSTRAINT FK_ORDER_STATUS_DETAIL_ORDER_STATUS FOREIGN KEY (ORDER_STATUS_ID) REFERENCES ORDER_STATUS(ID),
	CONSTRAINT FK_ORDER_STATUS_DETAIL_EMPLOYEE FOREIGN KEY (ORDER_ID) REFERENCES EMPLOYEE(ID),
	CONSTRAINT UNQ_ORDER_ORDERSTATUS UNIQUE (ORDER_ID, ORDER_STATUS_ID)
);


DROP TABLE IF EXISTS BILL;
CREATE TABLE BILL
(
	ID INT,
    CREATED_AT DATETIME,
    TOTAL_OF_MONEY FLOAT,
    ORDER_ID INT,
    PRIMARY KEY (ID),
    CONSTRAINT FK_BILL_ORDER FOREIGN KEY (ORDER_ID) REFERENCES `ORDER`(ID)
);




