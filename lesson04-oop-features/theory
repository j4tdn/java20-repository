1. tính đóng gói
English: Encapsulation

+Tính chất đóng gói được thể hiện qua các access modifier
	+ private: đóng gói trong phạm vi class
	+ default|protected: đóng goi trong phạm vi package
		
	+ public: được sử dụng ở bất kỳ đâu trong dự án
2. Tính đa hình
English: Polymorphism

Định nghĩa: tính chất đa hình có 2 loại
	+ Đa hình trong phương thức
	+ Đa hình trong đối tượng
	Phương thức, đối tượng đưọc gọi là đa hình nếu cùng 1 đối tượng, phương thức nhưng lúc thì có 'thể hiện' này, khác --> đa hình
	
	2.1: Đa hình trong phương thức
	+ Overloading
		Hai/Nhiều phương phức được gọi là overloading nếu
		+Cùng 1 class
		+Cùng tên
		+Khác số lượng tham số
		+Khác KDL truyền vào của tham số
		VD: int sum(int, int)
			int sum(int, int, int)
			float sum(float, float)
	+Overriding
		Hai/Nhiều phương thức được gọi là overriding nếu
		+ Cùng phần khai báo hàm: vd void log()
		+ Thuộc 2/n class có quan hệ cha con
		+ Lớp con định nghĩa/override lại phần thân hàm từ hàm cha
		VD: toString, equal, log
	2.2: Đa hình trong đối tượng
		Lấy, gán giá trị của kiểu dữ liệu cha, con cho KDL cha
		Nói cách khác: Lấy biến kiểu cha = kiểu cha/con
		Mục đích:
			+ Giúp chuyển đổi qua về giữa các KDL cha con
			+ Tạo một mảng/danh sách các phần tử kiểu cha con
			+ Viết ra phương thức chung có tham số là KDL cha để nhận vào giá trị thuộc KDL cha/con
			vd: callShapeMethods(Shape shape)
3. Tinh thừa kế
English: Inheritance

Định nghĩa: Khi 2/N đối tượng có chung thuộc tính, phương thức, thay vì ở mỗi class phải tạo đi/lại cá tt,
pt đó(trùng lặp code, không tổng quát hóa) thì mình sẽ tạo ra Kiểu cha chứa các tt, pt chung đó
vd: Sách giáo khoa: mã sách, tên sách, nhà xuất bản, trạng thái(cũ, mới), giảm giá
	Sách tham khảo: mã sách, tên sách, nhà xuất bản, thuế(%)

KDL cha/con: Class, Interface, Astract Class
+KDL cha: Class
+KDL con: Class
--> Khi class KDL(s) có chung thuộc tính--> đưa những tt chung đó vào class cha
--> Rồi lấy class con kế thừa, extends, reuse

+KDL cha: Interface
+KDL con: class
--> Khi KDL(s) con có chung phương thức
	--> đưa phương thức 'chung' (biết phần khai báo[tên hàm, KDL trả về]) vào KDL cha nhưng chưa biết phần thực thi
	--> hàm chung trong KDL cha nên là k có BODY
	--> KDL con khi kế thừa từ KDL cha thì bắt buộc phải override
	
	
+KDL cha: Abstract Class
+KDL con: Class
--> Khi KDL cha vừa có hàm trừu tượng vừa có hàm bình thường
	.hàm trừu tượng --> abstract method
	.hàm bình thường --> body method
	.chứa các thuộc tính chung của KDL con

	
	
	
	