1. Tính chất đóng gói - Encapsulation

 Định nghĩa: Tính chất đóng gói được thể hiện qua các 'access modifier'
 	+ private: đóng gói trong phạm vi class
 	+ _ | protected(thừa kế): đóng gói trong phạm vi package
 	+ public: được sử dụng ở bất kì đâu trong dự án
 	
2. Tính chất đa hình - Polymorphism

 Định nghĩa: Tính chất đa hình có 2 loại
 	+ Đa hình trong phương thức
 	+ Đa hình trong đối tượng
 	Phương thức, đối tượng được gọi là đa hình nếu cùng 1 đối tượng, phương thức
 	nhưng lúc thì có 'thể hiện' này, khác --> đa hình
 	
 	2.1: Đa hình trong phương thức
 		 + Overloading:
 		   Hai/Nhiều phương thức được gọi là overloading nếu
 		   + thuộc cùng 1 class
 		   + cùng tên
 		   + khác số lượng tham số
 		   + khác KDL truyền vào của tham số đó
 		   VD: int   sum(int, int, int)
 		   	   int   sum(int, int, int)
 		   	   float sum(float, float)
 		   	   
 		 + Overriding:
 		   Hai/Nhiều phương thức được gọi là overriding nếu
 		   + Cùng phần khai báo hàm. VD: void log()
 		   + Thuộc 2/n class có quan hệ cha con
 		   + Lớp con định nghĩa/override lại phần thân hàm từ hàm của lớp cha
 		     VD: toString, equals, log
 		     
	2.2: Đa hình trong đối tượng
		  Lấy/gán giá trị của KDL cha, con cho KDL cha
		  Nói cách khác, lấy 1 biến kiểu cha = kiểu cha/con
		  --> Mục đích: + giúp chuyển đổi qua về giữa các KDL cha con
		  				+ tạo một mảng/danh sách các phần tử kiểu cha con
		  				+ viết ra phương thức chung có tham số là: KDL cha
		  				  để nhận vào giá trị thuộc KDL cha/con
		  		VD: callShapeMathods(Shape shape)
		  
3. Tính chất thừa kế - inheritance
 Định nghĩa: Khi 2/nhiều đối tượng có chung thuộc tính/phương thức. Thay vì ở mỗi class
 		phải tạo đi tạo lại các thuộc tính đó (trùng lặp code, ko tổng quát hóa) thì
 		mình sẽ tạo ra KIỂU cha để chứa các tt, pt chung đó
 	
 	VD: Sách giáo khoa: mã sách, tên sách, nhà xuất bản, trạng thái(cũ, mới), giảm giá
 		Sách tham khảo: mã sách, tên sách, nhà xuất bản, thuế(%)
 	
KDL Cha/Con: Class, Interface, Abstract Class
+ KDL Cha: Class
+ KDL Con: Class
--> khi class KDL(s) có chung thuộc tính --> đưa những thuộc tính chung đó vào class cha
	--> rồi lấy class con kế thừa, extends, reuse
	
+ KDL Cha: Interface
+ KDL Con: Class
--> khi KDL(s) con có chung phương thức --> đưa những phương thức 'chung' 
	--> (biết phần khai báo[tên hàm, kiểu trả về]) vào KDL cha nhưng chưa biết phần thực thi
	--> hàm chung trong KDL cha nên là ko có BODY
	--> KDL con khi kế thừa từ KDL cha thì bắt buộc phỉa override lại hàm 'chung' đó
	
+ KDL Cha: Abstract Class
+ KDL Con: Class
--> Khi KDL cha vừa có hàm trừu tượng, vừa có hàm bình thường
	. hàm trừu tượng --> abstract method
	. hàm bình thường --> body method
	. chứa các thuộc tính chung của KDL con

