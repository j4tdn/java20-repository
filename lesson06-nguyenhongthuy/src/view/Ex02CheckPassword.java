package view;import java.util.Scanner;import functional.PasswordConditional;import functional.PasswordException;/** * Viết chương trình kiểm tra tính hợp lệ của mật khẩu khi đăng ký tài khoản  * Mật khẩu phải thỏa mãn các điều kiện sau đây. Lặp lại các bước kiểm tra điều kiện * cho đến khi đăng ký tài khoản thành công. *  * 1. At least 8 characters  * 2. At most 256 characters  * 3. At least 1 lowercase alphabetic characters (a, b, c, ...)  * 4. At least 1 uppercase alphabetic characters (A, B, C, ...)  * 5. At least 1 number (1, 2, 3,...)  * 6. At least 1 special character *  * Nếu thông tin nhập vào không hợp lệ sẽ ném ra các ngoại lệ, lỗi tương ứng, * sau đó thông báo cho người dùng biết và cho phép nhập lại. */public class Ex02CheckPassword {	public static void main(String[] args) {		Scanner sc = new Scanner(System.in);		while(true) {			try {				System.out.print("Enter a password: ");				String input = sc.nextLine();				System.out.println("\nPassword: " + input + " ==> " + isPassword(input));				break;			} catch (Exception e) {				e.printStackTrace();				System.out.println("Please enter again !!!");			}		}		sc.close();	}	private static boolean isPassword(String input) throws PasswordException {		if(input.length() < 8) {			throw new PasswordException("At least 8 characters");		}		if(input.length() > 256) {			throw new PasswordException("At most 256 characters");		}		if(!check(input, c -> Character.isLowerCase(c))){			throw new PasswordException("At least 1 lowercase alphabetic characters (a, b, c, ...)");		}		if(!check(input, c -> Character.isUpperCase(c))){			throw new PasswordException("At least 1 uppercase alphabetic characters (A, B, C, ...)");		}		if(!check(input, c -> Character.isDigit(c))){			throw new PasswordException("At least 1 number (1, 2, 3,...)");		}		if(!input.matches(".*[^a-zA-Z0-9].*")){			throw new PasswordException("At least 1 special character");		}		return true;	}	private static boolean check(String input, PasswordConditional pwc) {		for (int i = 0; i < input.length(); i++) {			if (pwc.check(input.charAt(i))) {				return true;			}		}		return false;	}}